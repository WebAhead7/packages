[{"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\context\\context.js":"1","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Login\\index.jsx":"2","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Signup\\styles.js":"3","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\AddPackageButton\\index.jsx":"4","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\Filter\\styles.js":"5","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\PackageItem\\styles.js":"6","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\App.js":"7","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Signup\\index.jsx":"8","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\PackageList\\styles.js":"9","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addBusiness\\index.jsx":"10","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addBusiness\\styles.js":"11","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\index.js":"12","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Home\\index.jsx":"13","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Login\\styles.js":"14","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Home\\styles.js":"15","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\AddPackageButton\\styles.js":"16","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\PackageList\\index.jsx":"17","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\Filter\\index.jsx":"18","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addBackage\\styles.js":"19","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addBackage\\index.jsx":"20","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\PackageItem\\index.jsx":"21","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addClient\\index.jsx":"22","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addClient\\styles.js":"23"},{"size":419,"mtime":1609077827930,"results":"24","hashOfConfig":"25"},{"size":2063,"mtime":1609077827941,"results":"26","hashOfConfig":"25"},{"size":584,"mtime":1609147473943,"results":"27","hashOfConfig":"25"},{"size":498,"mtime":1609077827917,"results":"28","hashOfConfig":"25"},{"size":188,"mtime":1609077827919,"results":"29","hashOfConfig":"25"},{"size":864,"mtime":1609077827926,"results":"30","hashOfConfig":"25"},{"size":539,"mtime":1609148000010,"results":"31","hashOfConfig":"25"},{"size":4724,"mtime":1609094611603,"results":"32","hashOfConfig":"25"},{"size":122,"mtime":1609077827929,"results":"33","hashOfConfig":"25"},{"size":13300,"mtime":1609145877481,"results":"34","hashOfConfig":"25"},{"size":551,"mtime":1609114706325,"results":"35","hashOfConfig":"25"},{"size":347,"mtime":1609077827931,"results":"36","hashOfConfig":"25"},{"size":602,"mtime":1609077827939,"results":"37","hashOfConfig":"25"},{"size":459,"mtime":1609077827942,"results":"38","hashOfConfig":"25"},{"size":171,"mtime":1609077827940,"results":"39","hashOfConfig":"25"},{"size":356,"mtime":1609077827917,"results":"40","hashOfConfig":"25"},{"size":682,"mtime":1609077827928,"results":"41","hashOfConfig":"25"},{"size":1927,"mtime":1609077827918,"results":"42","hashOfConfig":"25"},{"size":663,"mtime":1609148882225,"results":"43","hashOfConfig":"25"},{"size":3762,"mtime":1609148526227,"results":"44","hashOfConfig":"25"},{"size":1545,"mtime":1609077827921,"results":"45","hashOfConfig":"25"},{"size":4540,"mtime":1609147680392,"results":"46","hashOfConfig":"25"},{"size":584,"mtime":1609147496539,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1rtvd8y",{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\context\\context.js",[],["105","106"],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Login\\index.jsx",["107","108","109","110","111","112"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Slider,\r\n  Typography,\r\n  Input,\r\n  InputAdornment,\r\n  IconButton,\r\n  InputLabel,\r\n  FormControl,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n// import AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Login = () => {\r\n  const styles = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handlerInputs = (event, inputName) => {\r\n    setValues({ ...values, [inputName]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <p className={styles.header}>Login</p>\r\n        <form>\r\n          <FormControl style={{ width: \"100%\" }}>\r\n            <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n            <Input\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              id=\"email\"\r\n              onChange={(e) => handlerInputs(e, \"email\")}\r\n              value={values.email}\r\n            />\r\n          </FormControl>\r\n          <FormControl style={{ width: \"100%\", marginTop: 15 }}>\r\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n            <Input\r\n              id=\"password\"\r\n              type={\"password\"}\r\n              value={values.password}\r\n              onChange={(e) => handlerInputs(e, \"password\")}\r\n            />\r\n          </FormControl>\r\n        </form>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ marginTop: 50, width: \"100%\" }}\r\n          onClick={() => console.log(values)}\r\n        >\r\n          Login\r\n        </Button>\r\n      </div>\r\n      <div className={styles.signup}>\r\n        <Typography variant=\"caption\">\r\n          If you donâ€™t have an account, please register.\r\n        </Typography>\r\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginTop: 20 }}>\r\n          Signup\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n",["113","114"],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Signup\\styles.js",[],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\AddPackageButton\\index.jsx",["115","116"],"import React from \"react\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst AddPackageButton = () => {\r\n  const styles = useStyles();\r\n  return (\r\n    <IconButton\r\n      className={styles.addButton}\r\n      onClick={() => console.log(\"TEST\")}\r\n    >\r\n      <Add className={styles.addIcon} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default AddPackageButton;\r\n",["117","118"],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\Filter\\styles.js",[],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\PackageItem\\styles.js",[],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\App.js",["119","120","121","122","123"],"import \"./App.css\";\r\nimport Addbackage from \"./screens/addBackage\";\r\nimport Addbusiness from \"./screens/addBusiness\";\r\nimport Home from \"./screens/Home\";\r\nimport Login from \"./screens/Login\";\r\nimport Signup from \"./screens/Signup\";\r\nimport Addclient from \"./screens/addClient\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Home /> */}\r\n      {/* <Login /> */}\r\n      {/* <Signup /> */}\r\n      {/* <Addbusiness /> */}\r\n      <Addbackage />\r\n      {/* <Addclient /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Signup\\index.jsx",["124","125","126","127","128","129","130","131"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Slider,\r\n  Typography,\r\n  Input,\r\n  InputAdornment,\r\n  IconButton,\r\n  InputLabel,\r\n  FormControl,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n// import AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Signup = () => {\r\n  const styles = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    fname : \"\", \r\n    lname : \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm : \"\", \r\n    city: \"\",\r\n    street: \"\",\r\n    building: \"\", \r\n    apartment: \"\",\r\n  });\r\n\r\n  const handlerInputs = (event, inputName) => {\r\n    setValues({ ...values, [inputName]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <p className={styles.header}>Sign up</p>\r\n        <form>\r\n        <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"fname\">First Name</InputLabel>\r\n            <Input\r\n              label=\"fname\"\r\n              id=\"fname\"\r\n              onChange={(e) => handlerInputs(e, \"fname\")}\r\n              value={values.fname}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"lname\">Last Name</InputLabel>\r\n            <Input\r\n              label=\"lname\"\r\n              id=\"lname\"\r\n              onChange={(e) => handlerInputs(e, \"lname\")}\r\n              value={values.lname}\r\n            />\r\n          </FormControl>\r\n         \r\n        <Grid container spacing={2}>\r\n        <Grid item xs>\r\n        <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"city\">City</InputLabel>\r\n            <Input\r\n              type = \"text\"\r\n              label=\"city\"\r\n              id=\"city\"\r\n              onChange={(e) => handlerInputs(e, \"city\")}\r\n              value={values.city}\r\n            />\r\n          </FormControl>\r\n        </Grid>  \r\n        <Grid item xs>\r\n        <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"street\">Street</InputLabel>\r\n            <Input\r\n              type = \"text\"\r\n              label=\"street\"\r\n              id=\"street\"\r\n              onChange={(e) => handlerInputs(e, \"street\")}\r\n              value={values.street}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs>\r\n        <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"address\">Building</InputLabel>\r\n            <Input\r\n              type = \"text\"\r\n              label=\"building\"\r\n              id=\"building\"\r\n              onChange={(e) => handlerInputs(e, \"building\")}\r\n              value={values.building}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs>\r\n        <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"apartment\">Apartment</InputLabel>\r\n            <Input\r\n              type = \"text\"\r\n              label=\"apartment\"\r\n              id=\"apartment\"\r\n              onChange={(e) => handlerInputs(e, \"apartment\")}\r\n              value={values.apartment}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n          <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n            <Input\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              id=\"email\"\r\n              onChange={(e) => handlerInputs(e, \"email\")}\r\n              value={values.email}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n            <Input\r\n              id=\"password\"\r\n              type={\"password\"}\r\n              value={values.password}\r\n              onChange={(e) => handlerInputs(e, \"password\")}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"confirm\">Confirm Password</InputLabel>\r\n            <Input\r\n              id=\"confirm\"\r\n              type=\"password\"\r\n              value={values.confirm}\r\n              onChange={(e) => handlerInputs(e, \"confirm\")}\r\n            />\r\n          </FormControl>\r\n        </form>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className = {styles.button}\r\n          onClick={() => console.log(values)}\r\n        >\r\n         Sign Up\r\n        </Button>\r\n      </div>\r\n     \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\PackageList\\styles.js",[],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addBusiness\\index.jsx",["132","133","134","135"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Slider,\r\n  Typography,\r\n  Input,\r\n  InputAdornment,\r\n  IconButton,\r\n  InputLabel,\r\n  FormControl,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  KeyboardTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Addbusiness = () => {\r\n  const categories = [\r\n    {\r\n      value: \"food\",\r\n      label: \"Food\",\r\n    },\r\n    {\r\n      value: \"sport\",\r\n      label: \"Sport\",\r\n    },\r\n  ];\r\n\r\n  const styles = useStyles();\r\n  const [values, setValues] = useState({\r\n    sname: \"\",\r\n    category: \"\",\r\n    hours: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    fax: \"\",\r\n    location: \"\",\r\n    about: \"\",\r\n  });\r\n  //   const [selectedDate, setSelectedDate] = useState({ sun1: new Date('2014-08-18T21:11:54'), sun2: new Date('2014-08-18T21:11:54'), mon1 : new Date('2014-08-18T21:11:54'), mon2: new Date('2014-08-18T21:11:54'), tue1 : new Date('2014-08-18T21:11:54'), tue2 : new Date('2014-08-18T21:11:54'), wed1 : new Date('2014-08-18T21:11:54'),wed2 : new Date('2014-08-18T21:11:54'), thu1 : new Date('2014-08-18T21:11:54'), thu2 : new Date('2014-08-18T21:11:54'), fri1 :new Date('2014-08-18T21:11:54'), fri2 : new Date('2014-08-18T21:11:54'), sat1 : new Date('2014-08-18T21:11:54'), sat2: new Date('2014-08-18T21:11:54')\r\n\r\n  // });\r\n\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date(\"2014-08-18T21:11:54\")\r\n  );\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handlerInputs = (event, inputName) => {\r\n    setValues({ ...values, [inputName]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <p className={styles.header}>Add Your Business</p>\r\n\r\n        <form>\r\n          <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"sname\">Shop Name</InputLabel>\r\n            <Input\r\n              label=\"sname\"\r\n              id=\"sname\"\r\n              onChange={(e) => handlerInputs(e, \"sname\")}\r\n              value={values.sname}\r\n            />\r\n          </FormControl>\r\n\r\n          <TextField\r\n            className={styles.input_top}\r\n            id=\"category\"\r\n            select\r\n            label=\"Category\"\r\n            value={values.category}\r\n            onChange={(e) => handlerInputs(e, \"category\")}\r\n            SelectProps={{\r\n              native: true,\r\n            }}\r\n            helperText=\"Please select your category\"\r\n          >\r\n            {categories.map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <p className={styles.title}>Working Days</p>\r\n          <FormControl className={styles.input_top}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs>\r\n                  <p>Sunday</p>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"sun1\"\r\n                    label=\"Open Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"sun2\"\r\n                    label=\"Close Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </FormControl>\r\n          <FormControl className={styles.input_top}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs>\r\n                  <p>Monday</p>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"mon1\"\r\n                    label=\"Open Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"mon2\"\r\n                    label=\"Close Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </FormControl>\r\n\r\n          <FormControl className={styles.input_top}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs>\r\n                  <p>Tuesday</p>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"tus1\"\r\n                    label=\"Open Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"tus2\"\r\n                    label=\"Close Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </FormControl>\r\n\r\n          <FormControl className={styles.input_top}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs>\r\n                  <p>Wednesday</p>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"wed1\"\r\n                    label=\"Open Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"wed2\"\r\n                    label=\"Close Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </FormControl>\r\n\r\n          <FormControl className={styles.input_top}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs>\r\n                  <p>Thursday</p>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"thu1\"\r\n                    label=\"Open Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"thu2\"\r\n                    label=\"Close Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </FormControl>\r\n\r\n          <FormControl className={styles.input_top}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs>\r\n                  <p>Friday</p>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"fri1\"\r\n                    label=\"Open Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"fri2\"\r\n                    label=\"Close Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </FormControl>\r\n\r\n          <FormControl className={styles.input_top}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs>\r\n                  <p>Saturday</p>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"sat1\"\r\n                    label=\"Open Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"sat2\"\r\n                    label=\"Close Hour\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change time\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </FormControl>\r\n\r\n          <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"phone\">Phone</InputLabel>\r\n            <Input\r\n              label=\"phone\"\r\n              id=\"phone\"\r\n              onChange={(e) => handlerInputs(e, \"phone\")}\r\n              value={values.phone}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"fax\">Fax</InputLabel>\r\n            <Input\r\n              label=\"fax\"\r\n              id=\"fax\"\r\n              onChange={(e) => handlerInputs(e, \"fax\")}\r\n              value={values.fax}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n            <Input\r\n              label=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => handlerInputs(e, \"email\")}\r\n              value={values.email}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"location\">Location</InputLabel>\r\n            <Input\r\n              label=\"location\"\r\n              id=\"location\"\r\n              onChange={(e) => handlerInputs(e, \"location\")}\r\n              value={values.location}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl className={styles.input_top}>\r\n            <InputLabel htmlFor=\"about\">About your Shop</InputLabel>\r\n            <Input\r\n              label=\"about\"\r\n              id=\"about\"\r\n              onChange={(e) => handlerInputs(e, \"about\")}\r\n              value={values.about}\r\n            />\r\n          </FormControl>\r\n        </form>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={styles.button}\r\n          onClick={() => console.log(values, selectedDate)}\r\n        >\r\n          Finish\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Addbusiness;\r\n","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addBusiness\\styles.js",[],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\index.js",[],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Home\\index.jsx",["136","137","138","139"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Slider,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport PackageList from \"../../components/PackageList\";\r\nimport Filter from \"../../components/Filter\";\r\nimport AddPackageButton from \"../../components/AddPackageButton\";\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <Container>\r\n      <Button variant=\"contained\" color=\"secondary\">\r\n        Alaa\r\n      </Button>\r\n      <Filter />\r\n      <PackageList />\r\n      <AddPackageButton />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Login\\styles.js",[],["140","141"],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\Home\\styles.js",[],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\AddPackageButton\\styles.js",[],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\PackageList\\index.jsx",["142","143"],"import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport PackageItem from \"../PackageItem\";\r\nconst data = [\r\n  { addedAt: \"10 mins ago\", status: \"Pending\", agent: \"Pending\" },\r\n  { addedAt: \"13 mins ago\", status: \"Pending\", agent: \"Pending\" },\r\n  { addedAt: \"28 mins ago\", status: \"Pending\", agent: \"Pending\" },\r\n  { addedAt: \"35 mins ago\", status: \"On transit\", agent: \"Mario\" },\r\n];\r\n\r\nconst PackageList = () => {\r\n  const styles = useStyles();\r\n  return (\r\n    <div>\r\n      {data.map((item, index) => (\r\n        <PackageItem key={index} data={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackageList;\r\n","C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\Filter\\index.jsx",["144"],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addBackage\\styles.js",[],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addBackage\\index.jsx",["145","146","147","148","149","150"],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\components\\PackageItem\\index.jsx",["151","152"],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addClient\\index.jsx",["153","154","155","156","157","158","159","160"],"C:\\Users\\Omkolthom\\Desktop\\webahead\\packages\\src\\screens\\addClient\\styles.js",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":4,"column":3,"nodeType":"167","messageId":"168","endLine":4,"endColumn":12},{"ruleId":"165","severity":1,"message":"169","line":5,"column":3,"nodeType":"167","messageId":"168","endLine":5,"endColumn":9},{"ruleId":"165","severity":1,"message":"170","line":8,"column":3,"nodeType":"167","messageId":"168","endLine":8,"endColumn":17},{"ruleId":"165","severity":1,"message":"171","line":9,"column":3,"nodeType":"167","messageId":"168","endLine":9,"endColumn":13},{"ruleId":"165","severity":1,"message":"172","line":15,"column":10,"nodeType":"167","messageId":"168","endLine":15,"endColumn":20},{"ruleId":"165","severity":1,"message":"173","line":15,"column":22,"nodeType":"167","messageId":"168","endLine":15,"endColumn":35},{"ruleId":"161","replacedBy":"174"},{"ruleId":"163","replacedBy":"175"},{"ruleId":"165","severity":1,"message":"176","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":16},{"ruleId":"165","severity":1,"message":"177","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":12},{"ruleId":"161","replacedBy":"178"},{"ruleId":"163","replacedBy":"179"},{"ruleId":"165","severity":1,"message":"180","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":19},{"ruleId":"165","severity":1,"message":"181","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":12},{"ruleId":"165","severity":1,"message":"182","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":13},{"ruleId":"165","severity":1,"message":"183","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":14},{"ruleId":"165","severity":1,"message":"184","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":4,"column":3,"nodeType":"167","messageId":"168","endLine":4,"endColumn":12},{"ruleId":"165","severity":1,"message":"169","line":5,"column":3,"nodeType":"167","messageId":"168","endLine":5,"endColumn":9},{"ruleId":"165","severity":1,"message":"185","line":6,"column":3,"nodeType":"167","messageId":"168","endLine":6,"endColumn":13},{"ruleId":"165","severity":1,"message":"170","line":8,"column":3,"nodeType":"167","messageId":"168","endLine":8,"endColumn":17},{"ruleId":"165","severity":1,"message":"171","line":9,"column":3,"nodeType":"167","messageId":"168","endLine":9,"endColumn":13},{"ruleId":"165","severity":1,"message":"186","line":16,"column":8,"nodeType":"167","messageId":"168","endLine":16,"endColumn":16},{"ruleId":"165","severity":1,"message":"172","line":17,"column":10,"nodeType":"167","messageId":"168","endLine":17,"endColumn":20},{"ruleId":"165","severity":1,"message":"173","line":17,"column":22,"nodeType":"167","messageId":"168","endLine":17,"endColumn":35},{"ruleId":"165","severity":1,"message":"169","line":5,"column":3,"nodeType":"167","messageId":"168","endLine":5,"endColumn":9},{"ruleId":"165","severity":1,"message":"185","line":6,"column":3,"nodeType":"167","messageId":"168","endLine":6,"endColumn":13},{"ruleId":"165","severity":1,"message":"170","line":8,"column":3,"nodeType":"167","messageId":"168","endLine":8,"endColumn":17},{"ruleId":"165","severity":1,"message":"171","line":9,"column":3,"nodeType":"167","messageId":"168","endLine":9,"endColumn":13},{"ruleId":"165","severity":1,"message":"166","line":4,"column":3,"nodeType":"167","messageId":"168","endLine":4,"endColumn":12},{"ruleId":"165","severity":1,"message":"169","line":5,"column":3,"nodeType":"167","messageId":"168","endLine":5,"endColumn":9},{"ruleId":"165","severity":1,"message":"185","line":6,"column":3,"nodeType":"167","messageId":"168","endLine":6,"endColumn":13},{"ruleId":"165","severity":1,"message":"187","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":17},{"ruleId":"161","replacedBy":"188"},{"ruleId":"163","replacedBy":"189"},{"ruleId":"165","severity":1,"message":"185","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":20},{"ruleId":"165","severity":1,"message":"190","line":13,"column":9,"nodeType":"167","messageId":"168","endLine":13,"endColumn":15},{"ruleId":"165","severity":1,"message":"176","line":11,"column":3,"nodeType":"167","messageId":"168","endLine":11,"endColumn":9},{"ruleId":"165","severity":1,"message":"166","line":4,"column":3,"nodeType":"167","messageId":"168","endLine":4,"endColumn":12},{"ruleId":"165","severity":1,"message":"169","line":5,"column":3,"nodeType":"167","messageId":"168","endLine":5,"endColumn":9},{"ruleId":"165","severity":1,"message":"185","line":6,"column":3,"nodeType":"167","messageId":"168","endLine":6,"endColumn":13},{"ruleId":"165","severity":1,"message":"170","line":8,"column":3,"nodeType":"167","messageId":"168","endLine":8,"endColumn":17},{"ruleId":"165","severity":1,"message":"171","line":9,"column":3,"nodeType":"167","messageId":"168","endLine":9,"endColumn":13},{"ruleId":"165","severity":1,"message":"177","line":14,"column":8,"nodeType":"167","messageId":"168","endLine":14,"endColumn":12},{"ruleId":"165","severity":1,"message":"191","line":2,"column":29,"nodeType":"167","messageId":"168","endLine":2,"endColumn":38},{"ruleId":"192","severity":1,"message":"193","line":12,"column":9,"nodeType":"194","endLine":12,"endColumn":74},{"ruleId":"165","severity":1,"message":"166","line":4,"column":3,"nodeType":"167","messageId":"168","endLine":4,"endColumn":12},{"ruleId":"165","severity":1,"message":"169","line":5,"column":3,"nodeType":"167","messageId":"168","endLine":5,"endColumn":9},{"ruleId":"165","severity":1,"message":"185","line":6,"column":3,"nodeType":"167","messageId":"168","endLine":6,"endColumn":13},{"ruleId":"165","severity":1,"message":"170","line":8,"column":3,"nodeType":"167","messageId":"168","endLine":8,"endColumn":17},{"ruleId":"165","severity":1,"message":"171","line":9,"column":3,"nodeType":"167","messageId":"168","endLine":9,"endColumn":13},{"ruleId":"165","severity":1,"message":"186","line":16,"column":8,"nodeType":"167","messageId":"168","endLine":16,"endColumn":16},{"ruleId":"165","severity":1,"message":"172","line":17,"column":10,"nodeType":"167","messageId":"168","endLine":17,"endColumn":20},{"ruleId":"165","severity":1,"message":"173","line":17,"column":22,"nodeType":"167","messageId":"168","endLine":17,"endColumn":35},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'Slider' is defined but never used.","'InputAdornment' is defined but never used.","'IconButton' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.",["195"],["196"],"'Button' is defined but never used.","'Icon' is defined but never used.",["195"],["196"],"'Addbusiness' is defined but never used.","'Home' is defined but never used.","'Login' is defined but never used.","'Signup' is defined but never used.","'Addclient' is defined but never used.","'Typography' is defined but never used.","'MenuItem' is defined but never used.","'useStyles' is defined but never used.",["195"],["196"],"'styles' is assigned a value but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]